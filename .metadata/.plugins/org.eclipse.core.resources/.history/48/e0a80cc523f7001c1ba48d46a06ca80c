package br.com.biblioteca.converts;

import java.util.stream.Collectors;

import javax.validation.Valid;

import org.modelmapper.ModelMapper;
import org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties.Pageable;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.stereotype.Component;

import br.com.biblioteca.controllers.dto.LivroInput;
import br.com.biblioteca.controllers.dto.LivroOutput;

	@Component
		public class LivroConvert {
		
	@AutoWired
		private ModelMapper modelMapper;
	
	@Autowired
		private AutorService autoreService;
	
		public LivroEntity inputToNewEntity(@Valid LivroInput livroInput) {
			LivroEntity livroEntity = modelMapper.map(livroInput, LivroEntity.class);
			converteIdAutorParaAutores(livroInput, livroEntity);
		return livroEntity;
		}

		public LivroOutput entityToOutput(LivroEntity livroEntity) {
			return modelMapper.map(livroEntity, LivroOutput.class);
		}

		public Page<LivroOutput> listPageEntityToListPageOutput(Page<LivroEntity> livrosLocalizados) {
			return livrosLocalizados.map(this::entityToOutput);
		}

		public void copyInputToEntity(LivroEntity livroLocalizado, @Valid LivroInput livroInput) {
			modelMapper.map(livroInput, livroLocalizado);
			converteIdsAutorParaAutores(livroInput, livroLocalizado);

		}

		public Page<LivroOutput> entityToOutput(Page<LivroEntity> livrosLocalizados, Pageable paginacao) {
			return new PageImpl<>(livrosLocalizados.stream().map(livroEntity -> {
				return entityToOutput(livroEntity);
			}).collect(Collectors.toList()));
		}

		private void converteIdsAutorParaAutores(LivroInput livroInput, LivroEntity livroEntity) {
			List<AutorEntity> autores = new ArrayList<>();
			for (Long idAutor : livroInput.getIdsAutores()) {
				AutorEntity autor = autorService.buscaPeloId(idAutor);
				autores.add(autor);
		
}
