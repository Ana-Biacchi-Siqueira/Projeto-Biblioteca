package br.com.biblioteca.controllers;
import java.net.URI;
import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.biblioteca.controllers.dto.BibliotecaDto;
import br.com.biblioteca.entities.Autor;

@RestController
@RequestMapping("/livros")
public class LivroController {
	
	@Autowired
	private LivroService livroService;
	
	@Autowired
	private LivroConvert livroConvert;
	
	@PostMapping
	public LivroOutput cadastra(@RequestBody @Valid LivroInput livroInput) {
		LivroEntity livroEntity = livroConvert.inputToNewEntity(livroInput);
		LivroEntity livroCadastrado = livroService.cria(livroEntity);
			return livroConvert.entityToOutput(livroCadastrado);
		
	}
	
	@PutMapping("/{id}")
	public AutorOutput altera(@PathVariable Long id, @RequestBody @Valid AutorInput autorInput) {
		AutorEntity encontraAutor = autorService.buscarPorId(id);
		autorConvert.copyInputToEntity(encontraAutor, autorInput);
		AutorEntity autorAlterado = autorService.altera(encontraAutor);
			return autorConvert.entityToOutput(autorAlterado); 
		
	}
		
	@PostMapping("/{id}")
		public BiografiaOutput cadastraBio(@RequestBody @Valid BiografiaInput biografiaInput) {
			BiografiaEntity biografiaEntity = biografiaConvert.inputToNewEntity(biografiaInput);
			BiografiaEntity cadastraBiografia = biografiaService.cria(biografiaEntity);
				return biografiaConvert.entityToOutput(cadastraBiografia); }
			
    @GetMapping
		public List<AutorOutput> listarTodos() {
		    List<AutorEntity> listarTodos = autorService.listarTodos();
		    	return autorConvert.entityToOutput(listarTodos);
			}
    
    @GetMapping
	public List<AutorOutput> listarPorId() {
	    List<AutorEntity> listarPorId = autorService.listaPorId();
	    	return autorConvert.entityToOutput(listarPorId);
		}
    
    
    @GetMapping
		public List<LivroOutput> listarPorAutorId() {
	    	List<LivroEntity> listarPorAutorId = livroService.listarPorAutorId();
	    		return livroConvert.entityToOutput(listarPorAutorId);
		}
		
		
		
		
		
			